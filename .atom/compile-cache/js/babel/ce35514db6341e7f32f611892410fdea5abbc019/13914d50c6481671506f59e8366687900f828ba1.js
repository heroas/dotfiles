function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _tinycolor2 = require('tinycolor2');

var _tinycolor22 = _interopRequireDefault(_tinycolor2);

var _helperWriteConfigFile = require('../helper/write-config-file');

var _helperWriteConfigFile2 = _interopRequireDefault(_helperWriteConfigFile);

var _helperToggleClassName = require('../helper/toggle-class-name');

var _helperToggleClassName2 = _interopRequireDefault(_helperToggleClassName);

var _helperToCamelCase = require('../helper/to-camel-case');

var _helperToCamelCase2 = _interopRequireDefault(_helperToCamelCase);

var _colorTemplatesJson = require('../color-templates.json');

var _colorTemplatesJson2 = _interopRequireDefault(_colorTemplatesJson);

var _buildColorSettings = require('./build-color-settings');

var _buildColorSettings2 = _interopRequireDefault(_buildColorSettings);

'use babel';

atom.config.onDidChange('atom-material-ui.colors.abaseColor', function (_ref) {
    var newValue = _ref.newValue;

    if (atom.config.get('atom-material-ui.colors.genAccent')) {
        var accentColor = (0, _tinycolor22['default'])(newValue.toHexString()).complement().saturate(20).lighten(5);

        return atom.config.set('atom-material-ui.colors.accentColor', accentColor.toRgbString());
    }

    return (0, _helperWriteConfigFile2['default'])((0, _buildColorSettings2['default'])(newValue, atom.config.get('atom-material-ui.colors.accentColor')), true);
});

atom.config.onDidChange('atom-material-ui.colors.predefinedColor', function (value) {
    var newValue = (0, _helperToCamelCase2['default'])(value.newValue);

    atom.config.set('atom-material-ui.colors.abaseColor', _colorTemplatesJson2['default'][newValue].base);
    atom.config.set('atom-material-ui.colors.accentColor', _colorTemplatesJson2['default'][newValue].accent);
});

atom.config.onDidChange('atom-material-ui.colors.accentColor', function (_ref2) {
    var newValue = _ref2.newValue;
    return (0, _helperWriteConfigFile2['default'])((0, _buildColorSettings2['default'])(atom.config.get('atom-material-ui.colors.abaseColor'), newValue), true);
});

atom.config.observe('atom-material-ui.colors.paintCursor', function (value) {
    return (0, _helperToggleClassName2['default'])('amu-paint-cursor', value);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2hlcm8vLmF0b20vcGFja2FnZXMvYXRvbS1tYXRlcmlhbC11aS9saWIvY29sb3JzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OzBCQUVzQixZQUFZOzs7O3FDQUNOLDZCQUE2Qjs7OztxQ0FDN0IsNkJBQTZCOzs7O2lDQUNqQyx5QkFBeUI7Ozs7a0NBQ3RCLHlCQUF5Qjs7OztrQ0FDckIsd0JBQXdCOzs7O0FBUHZELFdBQVcsQ0FBQzs7QUFTWixJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxvQ0FBb0MsRUFBRSxVQUFDLElBQVksRUFBSztRQUFmLFFBQVEsR0FBVixJQUFZLENBQVYsUUFBUTs7QUFDckUsUUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxtQ0FBbUMsQ0FBQyxFQUFFO0FBQ3RELFlBQU0sV0FBVyxHQUFHLDZCQUFVLFFBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUNoRCxVQUFVLEVBQUUsQ0FDWixRQUFRLENBQUMsRUFBRSxDQUFDLENBQ1osT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDOztBQUVoQixlQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLHFDQUFxQyxFQUFFLFdBQVcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO0tBQzVGOztBQUVELFdBQU8sd0NBQ0gscUNBQ0ksUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLHFDQUFxQyxDQUFDLENBQ25FLEVBQ0QsSUFBSSxDQUNQLENBQUM7Q0FDTCxDQUFDLENBQUM7O0FBRUgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMseUNBQXlDLEVBQUUsVUFBQyxLQUFLLEVBQUs7QUFDMUUsUUFBTSxRQUFRLEdBQUcsb0NBQVksS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDOztBQUU3QyxRQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxvQ0FBb0MsRUFBRSxnQ0FBZSxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNyRixRQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxxQ0FBcUMsRUFBRSxnQ0FBZSxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztDQUMzRixDQUFDLENBQUM7O0FBRUgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMscUNBQXFDLEVBQUUsVUFBQyxLQUFZO1FBQVYsUUFBUSxHQUFWLEtBQVksQ0FBVixRQUFRO1dBQ3RFLHdDQUNJLHFDQUNJLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLG9DQUFvQyxDQUFDLEVBQUUsUUFBUSxDQUNsRSxFQUNELElBQUksQ0FDUDtDQUNKLENBQUMsQ0FBQzs7QUFFSCxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxxQ0FBcUMsRUFBRSxVQUFBLEtBQUs7V0FBSSx3Q0FBZ0Isa0JBQWtCLEVBQUUsS0FBSyxDQUFDO0NBQUEsQ0FBQyxDQUFDIiwiZmlsZSI6Ii9ob21lL2hlcm8vLmF0b20vcGFja2FnZXMvYXRvbS1tYXRlcmlhbC11aS9saWIvY29sb3JzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBiYWJlbCc7XG5cbmltcG9ydCB0aW55Y29sb3IgZnJvbSAndGlueWNvbG9yMic7XG5pbXBvcnQgd3JpdGVDb25maWdGaWxlIGZyb20gJy4uL2hlbHBlci93cml0ZS1jb25maWctZmlsZSc7XG5pbXBvcnQgdG9nZ2xlQ2xhc3NOYW1lIGZyb20gJy4uL2hlbHBlci90b2dnbGUtY2xhc3MtbmFtZSc7XG5pbXBvcnQgdG9DYW1lbENhc2UgZnJvbSAnLi4vaGVscGVyL3RvLWNhbWVsLWNhc2UnO1xuaW1wb3J0IGNvbG9yVGVtcGxhdGVzIGZyb20gJy4uL2NvbG9yLXRlbXBsYXRlcy5qc29uJztcbmltcG9ydCBidWlsZENvbG9yU2V0dGluZ3MgZnJvbSAnLi9idWlsZC1jb2xvci1zZXR0aW5ncyc7XG5cbmF0b20uY29uZmlnLm9uRGlkQ2hhbmdlKCdhdG9tLW1hdGVyaWFsLXVpLmNvbG9ycy5hYmFzZUNvbG9yJywgKHsgbmV3VmFsdWUgfSkgPT4ge1xuICAgIGlmIChhdG9tLmNvbmZpZy5nZXQoJ2F0b20tbWF0ZXJpYWwtdWkuY29sb3JzLmdlbkFjY2VudCcpKSB7XG4gICAgICAgIGNvbnN0IGFjY2VudENvbG9yID0gdGlueWNvbG9yKG5ld1ZhbHVlLnRvSGV4U3RyaW5nKCkpXG4gICAgICAgICAgICAuY29tcGxlbWVudCgpXG4gICAgICAgICAgICAuc2F0dXJhdGUoMjApXG4gICAgICAgICAgICAubGlnaHRlbig1KTtcblxuICAgICAgICByZXR1cm4gYXRvbS5jb25maWcuc2V0KCdhdG9tLW1hdGVyaWFsLXVpLmNvbG9ycy5hY2NlbnRDb2xvcicsIGFjY2VudENvbG9yLnRvUmdiU3RyaW5nKCkpO1xuICAgIH1cblxuICAgIHJldHVybiB3cml0ZUNvbmZpZ0ZpbGUoXG4gICAgICAgIGJ1aWxkQ29sb3JTZXR0aW5ncyhcbiAgICAgICAgICAgIG5ld1ZhbHVlLCBhdG9tLmNvbmZpZy5nZXQoJ2F0b20tbWF0ZXJpYWwtdWkuY29sb3JzLmFjY2VudENvbG9yJyksXG4gICAgICAgICksXG4gICAgICAgIHRydWUsXG4gICAgKTtcbn0pO1xuXG5hdG9tLmNvbmZpZy5vbkRpZENoYW5nZSgnYXRvbS1tYXRlcmlhbC11aS5jb2xvcnMucHJlZGVmaW5lZENvbG9yJywgKHZhbHVlKSA9PiB7XG4gICAgY29uc3QgbmV3VmFsdWUgPSB0b0NhbWVsQ2FzZSh2YWx1ZS5uZXdWYWx1ZSk7XG5cbiAgICBhdG9tLmNvbmZpZy5zZXQoJ2F0b20tbWF0ZXJpYWwtdWkuY29sb3JzLmFiYXNlQ29sb3InLCBjb2xvclRlbXBsYXRlc1tuZXdWYWx1ZV0uYmFzZSk7XG4gICAgYXRvbS5jb25maWcuc2V0KCdhdG9tLW1hdGVyaWFsLXVpLmNvbG9ycy5hY2NlbnRDb2xvcicsIGNvbG9yVGVtcGxhdGVzW25ld1ZhbHVlXS5hY2NlbnQpO1xufSk7XG5cbmF0b20uY29uZmlnLm9uRGlkQ2hhbmdlKCdhdG9tLW1hdGVyaWFsLXVpLmNvbG9ycy5hY2NlbnRDb2xvcicsICh7IG5ld1ZhbHVlIH0pID0+IChcbiAgICB3cml0ZUNvbmZpZ0ZpbGUoXG4gICAgICAgIGJ1aWxkQ29sb3JTZXR0aW5ncyhcbiAgICAgICAgICAgIGF0b20uY29uZmlnLmdldCgnYXRvbS1tYXRlcmlhbC11aS5jb2xvcnMuYWJhc2VDb2xvcicpLCBuZXdWYWx1ZSxcbiAgICAgICAgKSxcbiAgICAgICAgdHJ1ZSxcbiAgICApXG4pKTtcblxuYXRvbS5jb25maWcub2JzZXJ2ZSgnYXRvbS1tYXRlcmlhbC11aS5jb2xvcnMucGFpbnRDdXJzb3InLCB2YWx1ZSA9PiB0b2dnbGVDbGFzc05hbWUoJ2FtdS1wYWludC1jdXJzb3InLCB2YWx1ZSkpO1xuIl19